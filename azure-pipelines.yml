# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
# https://joeblogs.technology/2020/07/multi-stage-pipelines-and-yaml-for-continuous-delivery-azure-devops/
# https://dev.to/mcklmt/build-and-deploy-angular-app-with-azure-devops-3nnf
# https://docs.microsoft.com/en-us/azure/devops/pipelines/ecosystems/javascript?view=azure-devops&tabs=code

# stage / job / step / task
trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  project: '**/Blog.API/Blog.API.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  azureSubscription: 'Pay as you go subscription'
  appName: 'SamWheatWeb'
  system.debug: false

steps:

# Install dependencies

- task: NodeTool@0
  displayName: Install Node
  inputs:
    versionSpec: '16.13.1'

- script: |
    npm install -g npm@8.3.0
  displayName: Update NPM

- script: |
    npm install -g @angular/cli
  displayName: Install Angular CLI

- task: NuGetToolInstaller@1
  displayName: 'Install NuGet'


# Build and deploy WebApp

- script: |
    cd Blog/ClientApp
    npm install
  displayName: 'npm install'
     
- script: |
    cd Blog/ClientApp
    npm run build:prod
  displayName: 'npm build'
      
- publish: '$(System.DefaultWorkingDirectory)/Blog/ClientApp/dist/'
  artifact: WebApp
        
- task: AzureWebApp@1
  displayName: 'Deploy Azure Web App'
  inputs:
    azureSubscription: $(azureSubscription)
    appType: webApp
    appName: $(appName)
    artifactName: WebApp

# Build and deploy API        
      

- task: UseDotNet@2
  displayName: 'Use dotnet 6'
  inputs:
    packageType: 'sdk'
    version: '6.x'

- task: DotNetCoreCLI@2
  displayName: 'DotNet Restore NuGet packages'
  inputs:
    command: 'restore'
    feedsToUse: 'select'
    vstsFeed: 'LeaderAnalyticsFeed'
    includeNuGetOrg: true
 
- task: DotNetCoreCLI@2
  displayName: 'Publish API'
  inputs:
    command: 'publish'
    publishWebProjects: false
    project: $(project)
    configuration: $(buildConfiguration)
  #  arguments: '-o $(Build.ArtifactStagingDirectory)/API/'
    zipAfterPublish: true
    modifyOutputPath: true

- task: AzureWebApp@1
  displayName: 'Deploy API'
  inputs:
    azureSubscription: $(azureSubscription)
    appType: webApp
    appName: $(appName)
    virtualApplication: '/api'
    package: $(Build.ArtifactStagingDirectory)/**/*.zip
